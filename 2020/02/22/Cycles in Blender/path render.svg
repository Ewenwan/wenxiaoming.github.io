<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1310px" preserveAspectRatio="none" style="width:1390px;height:1310px;" version="1.1" viewBox="0 0 1390 1310" width="1390px" zoomAndPan="magnify"><defs><filter height="300%" id="f1j1vx3r040qx5" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="83" x="654.25" y="26.0439">path render</text><rect fill="#FFFFFF" filter="url(#f1j1vx3r040qx5)" height="423.2983" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="574.5" y="820.8896"/><rect fill="#FFFFFF" filter="url(#f1j1vx3r040qx5)" height="341.7896" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="579.5" y="860.644"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="46" x2="46" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="151" x2="151" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="262" x2="262" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="450" x2="450" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="579" x2="579" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="759" x2="759" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="877" x2="877" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1020.5" x2="1020.5" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1171.5" x2="1171.5" y1="74.2402" y2="1267.188"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1322.5" x2="1322.5" y1="74.2402" y2="1267.188"/><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="73" x="8" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="59" x="15" y="59.1641">TaskPool</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="73" x="8" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="59" x="15" y="1289.2319">TaskPool</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="109" x="95" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="95" x="102" y="59.1641">TaskScheduler</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="109" x="95" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="95" x="102" y="1289.2319">TaskScheduler</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="85" x="218" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="71" x="225" y="59.1641">CPUDevice</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="85" x="218" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="71" x="225" y="1289.2319">CPUDevice</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="384" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="115" x="391" y="59.1641">kernel_cpu_impl.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="129" x="384" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="115" x="391" y="1289.2319">kernel_cpu_impl.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="101" x="527" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="87" x="534" y="59.1641">kernel_path.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="101" x="527" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="87" x="534" y="1289.2319">kernel_path.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="699" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="103" x="706" y="59.1641">kernel_shader.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="699" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="103" x="706" y="1289.2319">kernel_shader.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="51" x="850" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="37" x="857" y="59.1641">svm.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="51" x="850" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="37" x="857" y="1289.2319">svm.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="959.5" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="104" x="966.5" y="59.1641">svm_geometry.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="959.5" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="104" x="966.5" y="1289.2319">svm_geometry.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="1091.5" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="142" x="1098.5" y="59.1641">kernel_path_surface.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="1091.5" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="142" x="1098.5" y="1289.2319">kernel_path_surface.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="1261.5" y="36.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="104" x="1268.5" y="59.1641">kernel_passes.h</text><rect fill="#FEFECE" filter="url(#f1j1vx3r040qx5)" height="33.1201" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="1261.5" y="1266.188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="104" x="1268.5" y="1289.2319">kernel_passes.h</text><rect fill="#FFFFFF" filter="url(#f1j1vx3r040qx5)" height="423.2983" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="574.5" y="820.8896"/><rect fill="#FFFFFF" filter="url(#f1j1vx3r040qx5)" height="341.7896" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="579.5" y="860.644"/><polygon fill="#A80036" points="139.5,108.9946,149.5,112.9946,139.5,116.9946,143.5,112.9946" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="46.5" x2="145.5" y1="112.9946" y2="112.9946"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="53.5" y="108.1382">push</text><path d="M156,89.2402 L156,116.2402 L234,116.2402 L234,99.2402 L224,89.2402 L156,89.2402 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M224,89.2402 L224,99.2402 L234,99.2402 L224,89.2402 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="162" y="109.1382">push task</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="151.5" x2="193.5" y1="299.1614" y2="299.1614"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="193.5" x2="193.5" y1="299.1614" y2="312.1614"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="152.5" x2="193.5" y1="312.1614" y2="312.1614"/><polygon fill="#A80036" points="162.5,308.1614,152.5,312.1614,162.5,316.1614,158.5,312.1614" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="158.5" y="294.3049">thread_run</text><path d="M231,130.9946 L231,459.9946 L549,459.9946 L549,140.9946 L539,130.9946 L231,130.9946 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M539,130.9946 L539,140.9946 L549,140.9946 L539,130.9946 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="144" x="237" y="150.8926">// get task for processing</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="297" x="237" y="168.647">bool TaskScheduler::thread_wait_pop(Entry &amp;entry)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="4" x="237" y="186.4014">{</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="276" x="245" y="204.1558">thread_scoped_lock queue_lock(queue_mutex);</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="241" y="221.9102"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="195" x="245" y="239.6646">while (queue.empty() &amp;&amp; !do_exit)</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="175" x="253" y="257.4189">queue_cond.wait(queue_lock);</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="241" y="275.1733"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="109" x="245" y="292.9277">if (queue.empty()) {</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="253" y="310.6821">assert(do_exit);</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="68" x="253" y="328.4365">return false;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="4" x="245" y="346.1909">}</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="241" y="363.9453"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="245" y="381.6997">entry = queue.front();</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="104" x="245" y="399.4541">queue.pop_front();</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="241" y="417.2085"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="63" x="245" y="434.9629">return true;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="4" x="237" y="452.7173">}</text><polygon fill="#A80036" points="250.5,489.3281,260.5,493.3281,250.5,497.3281,254.5,493.3281" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="151.5" x2="256.5" y1="493.3281" y2="493.3281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="158.5" y="488.4717">thread_run</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="262.5" x2="304.5" y1="525.0825" y2="525.0825"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="304.5" x2="304.5" y1="525.0825" y2="538.0825"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="263.5" x2="304.5" y1="538.0825" y2="538.0825"/><polygon fill="#A80036" points="273.5,534.0825,263.5,538.0825,273.5,542.0825,269.5,538.0825" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="269.5" y="520.2261">thread_run</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="262.5" x2="304.5" y1="657.1089" y2="657.1089"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="304.5" x2="304.5" y1="657.1089" y2="670.1089"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="263.5" x2="304.5" y1="670.1089" y2="670.1089"/><polygon fill="#A80036" points="273.5,666.1089,263.5,670.1089,273.5,674.1089,269.5,670.1089" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="61" x="269.5" y="652.2524">path_trace</text><path d="M342,551.0825 L342,756.0825 L886,756.0825 L886,561.0825 L876,551.0825 L342,551.0825 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M876,551.0825 L876,561.0825 L886,561.0825 L876,551.0825 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="523" x="348" y="570.9805">// process each tile, each pixel need to be caculated with (end_sample-start_sample)times</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="387" x="348" y="588.7349">for (int sample = start_sample; sample &lt; end_sample; sample++) {</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237" x="356" y="606.4893">for (int y = tile.y; y &lt; tile.y + tile.h; y++) {</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="239" x="364" y="624.2437">for (int x = tile.x; x &lt; tile.x + tile.w; x++) {</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="24" x="372" y="641.998">......</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="420" x="372" y="659.7524">path_trace_kernel()(kg, render_buffer, sample, x, y, tile.offset, tile.stride);</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="4" x="364" y="677.5068">}</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="4" x="356" y="695.2612">}</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="148" x="356" y="713.0156">tile.sample = sample + 1;</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="242" x="356" y="730.77">task.update_progress(&amp;tile, tile.w * tile.h);</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="4" x="348" y="748.5244">}</text><polygon fill="#A80036" points="438.5,785.1353,448.5,789.1353,438.5,793.1353,442.5,789.1353" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="262.5" x2="444.5" y1="789.1353" y2="789.1353"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="164" x="269.5" y="784.2788">kernel_cpu_avx2_path_trace</text><polygon fill="#A80036" points="562.5,816.8896,572.5,820.8896,562.5,824.8896,566.5,820.8896" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="450.5" x2="568.5" y1="820.8896" y2="820.8896"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="103" x="457.5" y="816.0332">kernel_path_trace</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="584.5" x2="631.5" y1="847.644" y2="847.644"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="631.5" x2="631.5" y1="847.644" y2="860.644"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="590.5" x2="631.5" y1="860.644" y2="860.644"/><polygon fill="#A80036" points="600.5,856.644,590.5,860.644,600.5,864.644,596.5,860.644" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="124" x="596.5" y="842.7876">kernel_path_integrate</text><polygon fill="#A80036" points="747.5,893.3984,757.5,897.3984,747.5,901.3984,751.5,897.3984" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="589.5" x2="753.5" y1="897.3984" y2="897.3984"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="135" x="596.5" y="892.542">shader_setup_from_ray</text><polygon fill="#A80036" points="747.5,930.1528,757.5,934.1528,747.5,938.1528,751.5,934.1528" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="589.5" x2="753.5" y1="934.1528" y2="934.1528"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="117" x="596.5" y="929.2964">shader_eval_surface</text><path d="M764,910.3984 L764,937.3984 L907,937.3984 L907,920.3984 L897,910.3984 L764,910.3984 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M897,910.3984 L897,920.3984 L907,920.3984 L897,910.3984 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="122" x="770" y="930.2964">/* Evaluate shader. */</text><polygon fill="#A80036" points="865.5,966.9072,875.5,970.9072,865.5,974.9072,869.5,970.9072" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="759.5" x2="871.5" y1="970.9072" y2="970.9072"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="94" x="766.5" y="966.0508">svm_eval_nodes</text><polygon fill="#A80036" points="1008.5,998.6616,1018.5,1002.6616,1008.5,1006.6616,1012.5,1002.6616" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="877.5" x2="1014.5" y1="1002.6616" y2="1002.6616"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="119" x="884.5" y="997.8052">svm_node_geometry</text><polygon fill="#A80036" points="747.5,1030.416,757.5,1034.416,747.5,1038.416,751.5,1034.416" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="589.5" x2="753.5" y1="1034.416" y2="1034.416"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="145" x="596.5" y="1029.5596">shader_prepare_closures</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="589.5" x2="631.5" y1="1066.1704" y2="1066.1704"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="631.5" x2="631.5" y1="1066.1704" y2="1079.1704"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="590.5" x2="631.5" y1="1079.1704" y2="1079.1704"/><polygon fill="#A80036" points="600.5,1075.1704,590.5,1079.1704,600.5,1083.1704,596.5,1079.1704" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="151" x="596.5" y="1061.314">kernel_path_shader_apply</text><path d="M759,1048.916 L759,1075.916 L1048,1075.916 L1048,1058.916 L1038,1048.916 L759,1048.916 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1038,1048.916 L1038,1058.916 L1048,1058.916 L1038,1048.916 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="268" x="765" y="1068.814">/* Apply shadow catcher, holdout, emission. */</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="589.5" x2="631.5" y1="1110.9248" y2="1110.9248"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="631.5" x2="631.5" y1="1110.9248" y2="1123.9248"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="590.5" x2="631.5" y1="1123.9248" y2="1123.9248"/><polygon fill="#A80036" points="600.5,1119.9248,590.5,1123.9248,600.5,1127.9248,596.5,1123.9248" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="596.5" y="1106.0684">kernel_path_ao</text><path d="M696,1093.6704 L696,1120.6704 L848,1120.6704 L848,1103.6704 L838,1093.6704 L696,1093.6704 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M838,1093.6704 L838,1103.6704 L848,1103.6704 L838,1093.6704 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="131" x="702" y="1113.5684">/* ambient occlusion */</text><polygon fill="#A80036" points="1159.5,1156.6792,1169.5,1160.6792,1159.5,1164.6792,1163.5,1160.6792" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="589.5" x2="1165.5" y1="1160.6792" y2="1160.6792"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="200" x="596.5" y="1155.8228">kernel_path_surface_connect_light</text><path d="M1176,1136.9248 L1176,1163.9248 L1300,1163.9248 L1300,1146.9248 L1290,1136.9248 L1176,1136.9248 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1290,1136.9248 L1290,1146.9248 L1300,1146.9248 L1290,1136.9248 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="103" x="1182" y="1156.8228">/* direct lighting */</text><polygon fill="#A80036" points="1159.5,1198.4336,1169.5,1202.4336,1159.5,1206.4336,1163.5,1202.4336" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="584.5" x2="1165.5" y1="1202.4336" y2="1202.4336"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="165" x="591.5" y="1197.5771">kernel_path_surface_bounce</text><path d="M287,1178.6792 L287,1205.6792 L565,1205.6792 L565,1188.6792 L555,1178.6792 L287,1178.6792 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M555,1178.6792 L555,1188.6792 L565,1188.6792 L555,1178.6792 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="257" x="293" y="1198.5771">/* compute direct lighting and next bounce */</text><polygon fill="#A80036" points="1310.5,1240.188,1320.5,1244.188,1310.5,1248.188,1314.5,1244.188" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="579.5" x2="1316.5" y1="1244.188" y2="1244.188"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="586.5" y="1239.3315">kernel_write_result</text><path d="M280,1220.4336 L280,1247.4336 L565,1247.4336 L565,1230.4336 L555,1220.4336 L280,1220.4336 " fill="#ADD8E6" filter="url(#f1j1vx3r040qx5)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M555,1220.4336 L555,1230.4336 L565,1230.4336 L555,1220.4336 " fill="#ADD8E6" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="264" x="286" y="1240.3315">write the processed result for the current pixel</text><!--
@startuml
title path render
TaskPool -> TaskScheduler:push
note right #LightBlue:push task
TaskScheduler -> TaskScheduler:thread_run
note right #LightBlue
// get task for processing
bool TaskScheduler::thread_wait_pop(Entry &entry)
{
  thread_scoped_lock queue_lock(queue_mutex);

  while (queue.empty() && !do_exit)
    queue_cond.wait(queue_lock);

  if (queue.empty()) {
    assert(do_exit);
    return false;
  }

  entry = queue.front();
  queue.pop_front();

  return true;
}
end note

TaskScheduler -> CPUDevice: thread_run
CPUDevice -> CPUDevice:thread_run
CPUDevice -> CPUDevice:path_trace
note right #LightBlue
    // process each tile, each pixel need to be caculated with (end_sample-start_sample)times
    for (int sample = start_sample; sample < end_sample; sample++) {
      for (int y = tile.y; y < tile.y + tile.h; y++) {
        for (int x = tile.x; x < tile.x + tile.w; x++) {
          ......
          path_trace_kernel()(kg, render_buffer, sample, x, y, tile.offset, tile.stride);
        }
      }
      tile.sample = sample + 1;
      task.update_progress(&tile, tile.w * tile.h);
    }
end note
CPUDevice -> "kernel_cpu_impl.h":kernel_cpu_avx2_path_trace
"kernel_cpu_impl.h" -> "kernel_path.h":kernel_path_trace
activate "kernel_path.h"

"kernel_path.h" -> "kernel_path.h":kernel_path_integrate
activate "kernel_path.h"
"kernel_path.h" -> "kernel_shader.h":shader_setup_from_ray 

"kernel_path.h" -> "kernel_shader.h":shader_eval_surface
note right #LightBlue:/* Evaluate shader. */
"kernel_shader.h" -> "svm.h":svm_eval_nodes
"svm.h" -> "svm_geometry.h":svm_node_geometry

"kernel_path.h" -> "kernel_shader.h":shader_prepare_closures
"kernel_path.h" -> "kernel_path.h":kernel_path_shader_apply
note right #LightBlue:/* Apply shadow catcher, holdout, emission. */ 
"kernel_path.h" -> "kernel_path.h":kernel_path_ao
note right #LightBlue:/* ambient occlusion */
"kernel_path.h" -> "kernel_path_surface.h":kernel_path_surface_connect_light
note right #LightBlue:/* direct lighting */
"kernel_path.h" -> "kernel_path_surface.h":kernel_path_surface_bounce
 note left #LightBlue:/* compute direct lighting and next bounce */
 deactivate "kernel_path.h"
 "kernel_path.h" -> "kernel_passes.h":kernel_write_result
 note left #LightBlue: write the processed result for the current pixel
 deactivate "kernel_path.h"
@enduml

PlantUML version 1.2019.09(Tue Aug 27 00:19:51 GMT+08:00 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 13.0.2+8
Operating System: Windows 10
OS Version: 10.0
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>